name: Release

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Build
        run: make build_all

      - name: Test
        run: |
          mv configs/config.example.yaml configs/config.yaml
          go test -cover ./... -race

      - name: Generate Changelog
        run: |
          go get -u github.com/git-chglog/git-chglog/cmd/git-chglog
          git-chglog -o CHANGELOG.md

      - name: Zip
        run: |
          zip -r twitter-media-scraper.linux-amd64-${{ github.ref }}.zip twitter-media-scraper.linux-amd64 configs
          zip -r twitter-media-scraper.linux-arm-${{ github.ref }}.zip twitter-media-scraper.linux-arm configs
          zip -r twitter-media-scraper.linux-arm64-${{ github.ref }}.zip twitter-media-scraper.linux-arm64 configs
          zip -r twitter-media-scraper.windows-amd64-${{ github.ref }}.zip twitter-media-scraper.windows-amd64 configs
          zip -r twitter-media-scraper.darwin-amd64-${{ github.ref }}.zip twitter-media-scraper.darwin-amd64 configs

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body_path: $CHANGELOG.md
          token: ${{ secrets.RELEASE_UPLOAD_TOKEN }}
          files: |
            twitter-media-scraper.linux-amd64-${{ github.ref }}.zip
            twitter-media-scraper.linux-arm-${{ github.ref }}.zip
            twitter-media-scraper.linux-arm64-${{ github.ref }}.zip
            twitter-media-scraper.windows-amd64-${{ github.ref }}.zip
            twitter-media-scraper.darwin-amd64-${{ github.ref }}.zip
        env:
          GITHUB_REPOSITORY: PetrusZ/twitter-media-scraper

      - name: Docker build and push to DockerHub
        env:
          REGISTRY: patrickz07
          REPOSITORY: simple-bank
          IMAGE_TAG: ${{ github.ref }}
        run: |
          echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u $REGISTRY --password-stdin
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest .
          docker push -a $REGISTRY/$REPOSITORY
